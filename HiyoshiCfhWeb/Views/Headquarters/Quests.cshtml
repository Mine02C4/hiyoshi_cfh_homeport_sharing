@using HiyoshiCfhWeb.XML
@model Tuple<HiyoshiCfhWeb.Models.Admiral, Quests, List<HiyoshiCfhWeb.Models.Quest>>
@{
    ViewBag.Title = "任務進捗";
    var admiral = Model.Item1;
    var questMaster = Model.Item2;
    var quests = Model.Item3;
    Func<QuestState, string> StateToClass = s =>
    {
        switch (s)
        {
            case QuestState.Invisible:
                return null;
            case QuestState.Visible:
                return "q-visible";
            case QuestState.Achieved:
                return "q-achieved";
            default:
                return null;
        }
    };
    var unmatchedQuests = quests.Where(x => x.IsMatched == false);
}

@Html.Partial("_HeaderPartial", admiral)

<p><a class="btn btn-default" href="~/XML/Quests.xml">任務XML</a></p>

@if (unmatchedQuests.Count() > 0)
{
    <h3>任務マスターと対応できなかった任務</h3>

    <table class="table">
        <tr>
            <th>
                カテゴリ
            </th>
            <th>
                タイプ
            </th>
            <th>
                任務名
            </th>
            <th>
                内容
            </th>
            <th>
                燃料
            </th>
            <th>
                弾薬
            </th>
            <th>
                鋼材
            </th>
            <th>
                ボーキサイト
            </th>
        </tr>
        @foreach (var item in unmatchedQuests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fuel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Bull)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Steel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Bauxite)
                </td>
            </tr>
        }
    </table>
}

<div class="row">
    <div class="col-md-4">
        <h3>デイリー</h3>
        <h4>出撃</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>演習</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.practice))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>遠征</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.expeditions))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>補給/入渠</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.supply))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>改装</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.remodelling))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-4">
        <h3>ウィークリー</h3>
        <h4>出撃</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>演習</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.practice))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>遠征</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.expeditions))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>改装</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.remodelling))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-4">
        <h3>マンスリー</h3>
        <h4>出撃</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.monthly && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>演習</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.monthly && x.Category == Category.practice))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.monthly && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h3>クォータリー</h3>
        <h4>出撃</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.quarterly && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.quarterly && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h3>その他</h3>
        <h4>出撃</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.other && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

<h3>単発</h3>
<div class="row">
    <div class="col-md-4">
        <h4>編成</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Category == Category.composition))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-4">
        <h4>出撃</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-4">
        <h4>演習</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.practice))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>遠征</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.expeditions))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>補給/入渠</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.supply))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>改装</h4>
        <table class="table quest-table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.remodelling))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
<div class="modal" id="quest-modal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h2><span class="quest-id"></span>: <span class="quest-name"></span></h2>
            </div>
            <div class="modal-body">
                <p class="quest-content"></p>
                <h3>開放条件</h3>
                <ul class="dependency"></ul>
                <h3>報酬</h3>
                <table class="table">
                    <tr>
                        <th>燃料</th>
                        <th>弾薬</th>
                        <th>鋼材</th>
                        <th>ボーキサイト</th>
                    </tr>
                    <tr>
                        <td class="fuel"></td>
                        <td class="bull"></td>
                        <td class="steel"></td>
                        <td class="bauxite"></td>
                    </tr>
                    <tr>
                        <th>高速建造材</th>
                        <th>高速修復材</th>
                        <th>開発資材</th>
                        <th>改修資材</th>
                    </tr>
                    <tr>
                        <td class="instant-build"></td>
                        <td class="instant-repair"></td>
                        <td class="development"></td>
                        <td class="renovation"></td>
                    </tr>
                </table>
                <h4>その他</h4>
                <p class="other-bonus"></p>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        "use strict";
        var questXml = null;
        $.ajax({
            url: '@Url.Content("~/XML/Quests.xml")',
            type: 'GET',
            dataType: 'xml',
            success: function (xml) {
                questXml = xml;
                $('table.quest-table').each(function () {
                    $(this).find('tr').each(function () {
                        $(this).on('click', function () {
                            var id = $(this).find('td')[0].innerText;
                            var node = $(questXml).find("Quest[Id='" + id + "']");
                            var name = node.find('Name').text();
                            var content = node.find('Content').text();
                            var fuel = node.find('Fuel').text();
                            var bull = node.find('Bull').text();
                            var steel = node.find('Steel').text();
                            var bauxite = node.find('Bauxite').text();
                            var instant_build = node.find('InstantBuildMaterials').text();
                            var instant_repair = node.find('InstantRepairMaterials').text();
                            var development = node.find('DevelopmentMaterials').text();
                            var renovation = node.find('RenovationMaterials').text();
                            var dialog = $('div#quest-modal');
                            dialog.find('.quest-name').text(name);
                            dialog.find('.quest-id').text(id);
                            dialog.find('.quest-content').text(content);
                            dialog.find('.fuel').text(fuel);
                            dialog.find('.bull').text(bull);
                            dialog.find('.steel').text(steel);
                            dialog.find('.bauxite').text(bauxite);
                            dialog.find('.instant-build').text(instant_build);
                            dialog.find('.instant-repair').text(instant_repair);
                            dialog.find('.development').text(development);
                            dialog.find('.renovation').text(renovation);
                            var deplist = dialog.find('.dependency');
                            deplist.empty();
                            node.find('Achieve').each(function () {
                                deplist.append($('<li>').text($(this).attr('Id')));
                            });
                            var other = node.find('Other').text();
                            dialog.find('.other-bonus').text(other);
                            dialog.modal();
                        });
                    });
                });
            },
            error: function () {
                alert('任務XMLの読み込みに失敗');
            }
        });
    });
</script>
