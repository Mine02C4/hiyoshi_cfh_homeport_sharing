@using HiyoshiCfhWeb.XML
@model Tuple<HiyoshiCfhWeb.Models.Admiral, Quests, List<HiyoshiCfhWeb.Models.Quest>>
@{
    ViewBag.Title = "任務進捗";
    var admiral = Model.Item1;
    var questMaster = Model.Item2;
    var quests = Model.Item3;
    Func<QuestState, string> StateToClass = s =>
    {
        switch (s)
        {
            case QuestState.Invisible:
                return null;
            case QuestState.Visible:
                return "info";
            case QuestState.Achieved:
                return "success";
            default:
                return null;
        }
    };
    var unmatchedQuests = quests.Where(x => x.IsMatched == false);
}

@Html.Partial("_HeaderPartial", admiral)

<p><a class="btn btn-default" href="~/XML/Quests.xml">任務XML</a></p>

@if (unmatchedQuests.Count() > 0)
{
    <h3>任務マスターと対応できなかった任務</h3>

    <table class="table">
        <tr>
            <th>
                カテゴリ
            </th>
            <th>
                タイプ
            </th>
            <th>
                任務名
            </th>
            <th>
                内容
            </th>
            <th>
                燃料
            </th>
            <th>
                弾薬
            </th>
            <th>
                鋼材
            </th>
            <th>
                ボーキサイト
            </th>
        </tr>
        @foreach (var item in unmatchedQuests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fuel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Bull)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Steel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Bauxite)
                </td>
            </tr>
        }
    </table>
}

<div class="row">
    <div class="col-md-4">
        <h3>デイリー</h3>
        <h4>出撃</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>演習</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.practice))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>遠征</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.expeditions))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>補給/入渠</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.supply))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>改装</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.daily && x.Category == Category.remodelling))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-4">
        <h3>ウィークリー</h3>
        <h4>出撃</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>演習</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.practice))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>遠征</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.expeditions))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>改装</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.weekly && x.Category == Category.remodelling))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-4">
        <h3>マンスリー</h3>
        <h4>出撃</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.monthly && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>演習</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.monthly && x.Category == Category.practice))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.monthly && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h3>クォータリー</h3>
        <h4>出撃</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.quarterly && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.quarterly && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h3>その他</h3>
        <h4>出撃</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.other && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

<h3>単発</h3>
<div class="row">
    <div class="col-md-4">
        <h4>編成</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Category == Category.composition))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-4">
        <h4>出撃</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.sortie))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
    <div class="col-md-4">
        <h4>演習</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.practice))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>遠征</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.expeditions))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>補給/入渠</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.supply))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>工廠</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.building))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
        <h4>改装</h4>
        <table class="table">
            @foreach (var item in questMaster.Quest
                .Where(x => x.Type == HiyoshiCfhWeb.XML.Type.onetime && x.Category == Category.remodelling))
            {
                <tr class="@(StateToClass(item.State))">
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.Name
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
