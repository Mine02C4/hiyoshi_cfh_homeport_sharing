@model Tuple<HiyoshiCfhWeb.Models.Admiral, IOrderedQueryable<HiyoshiCfhWeb.Models.MaterialRecord>>
@{
    var admiral = Model.Item1;
    var records = Model.Item2;
    ViewBag.Title = string.Format("資材統計({0} 提督)", admiral.Name);
}

@Html.Partial("_AdmiralsDropdownPartial")

<h2>@ViewBag.Title</h2>

<p>@Html.ActionLink("インポート", "Materials", "Import", null, new { @class = "btn btn-info" })</p>

<h3>主要4資材</h3>

<svg id="main_chart" style="height: 600px; overflow: visible"></svg>

<h3>その他資材</h3>

<svg id="other_chart" style="height: 200px; overflow: visible"></svg>

<script type="text/javascript" src="@Url.Content("/Scripts/d3/d3.min.js")"></script>
<script type="text/javascript" src="@Url.Content("/Scripts/nv.d3.min.js")"></script>
<script type="text/javascript">
    function setup_chart(url, selector) {
        d3.json(url, function (data) {
            var colors = d3.scale.category20();
            var keyColor = function (d, i) { return colors(d.key) };
            var chart = nv.models.lineChart()
                    .x(function (d) { return new Date(d["time"]) })
                    .y(function (d) { return d["value"] })
                    .showLegend(true)
                    .showYAxis(true)
                    .showXAxis(true)
                    .color(keyColor);

            chart.xAxis.tickFormat(
                function (d) {
                    return d3.time.format("%Y-%m-%d %H:%M:%S")(new Date(d))
                });
            chart.yAxis.tickFormat(d3.format(',.0d'));
            chart.forceY(0);
            d3.select(selector).datum(data).call(chart);
            nv.utils.windowResize(function () {
                chart.update();
            });
            return chart;
        });
    }
    setup_chart("@Html.Raw(Url.Action("Materials", new { type = "json", target = "main" }))", "#main_chart");
    setup_chart("@Html.Raw(Url.Action("Materials", new { type = "json", target = "other" }))", "#other_chart");
</script>
